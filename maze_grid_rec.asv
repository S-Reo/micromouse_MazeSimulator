%uax = uiaxes;

% 迷路サイズの指定
n = 9;
%M = ones(n,n);%n*n行列にマスの壁情報を示す16進数データを渡せばいい
% RcolumnとRrawの生成。最初は無しか、ランダム


function DrawMaze
    global N
    global Rcolumn
    global Rraw
    x1 = 1;
    y1 = 0;
    x2 = 1;
    y2 = 1;
    nw = uint8(N);
    nh = uint8(N);

    raw=uint8(1);
    column=uint8(1);
    while x2 <= nw-1
        
        while y2 <= nh
        %h = drawline(uax,'SelectedColor','black','Position',[x1 y1; x2 y2],'Visible','on');
        %plot([x1 x2],[y1 y2],'Color','black','ButtonDownFcn',@linuCallback,'LineWidth',1.8);
        r1 = rectangle('Position',[x1-0.05 y1+0.1 0.1 1-0.2],'FaceColor','k','ButtonDownFcn',@lineCallback);
        r1.UserData = [1 raw column];
        if Rcolumn(raw,column) == 1
            r1.FaceColor = 'k';%'#D7E5EE';%'#DEE4E9'; %グレー
            r1.LineStyle = '-';
            r1.LineWidth = 0.5;
            r1.EdgeColor = 'k';
        else
            r1.FaceColor = 'w';
            r1.LineStyle = '-';
            r1.LineWidth = 0.5;
            r1.EdgeColor = 'w';
        end

        %Rraw(raw, column) =uint8(1);
        y2 = y2 + 1;
        y1 = y1 + 1;
        hold on;
        raw = raw+1;
        end
    
    y1 = 0;
    y2 = 1;
    x1 = x1 + 1;
    x2 = x2 + 1;
    column = column+1;
    raw = 1;
    
    end
    
    x1 = 0;
    y1 = 1;
    x2 = 1;
    y2 = 1;
    while y2 <= nh-1
        while x2 <= nw
        %h = drawline(uax,'SelectedColor','black','Position',[x1 y1; x2 y2],'Visible','on');
        %plot([x1 x2],[y1 y2],'Color','black','ButtonDownFcn',@linuCallback,'LineWidth',1.8);
        r2 = rectangle('Position',[x1+0.1 y1-0.05 1-0.2 0.1],'FaceColor','k','ButtonDownFcn',@lineCallback);
        r2.UserData = [2 raw column];
        if Rraw(raw,column) == 1
            r1.FaceColor = 'k';%'#D7E5EE';%'#DEE4E9'; %グレー
            r1.LineStyle = '-';
            r1.LineWidth = 0.5;
            r1.EdgeColor = 'k';
        else
            r1.FaceColor = 'w';
            r1.LineStyle = '-';
            r1.LineWidth = 0.5;
            r1.EdgeColor = 'w';
        end
        %Rcolumn(raw, column) = uint8(2);
        x2 = x2 + 1;
        x1 = x1 + 1;
        column = column + 1;
        end
    
    y1 = y1+1;
    y2 = y2+1;
    x1 = 0;
    x2 = 1;
    raw = raw + 1;
    column = 1;
    end
    xlim([0 N]);
    ylim([0 N]);
    pbaspect([1 1 1]);

end
function initRraw(val)
    global Rraw 
    % = zeros(nw-1,nh);
    Rraw = val;
end
function initRcolumn(val)
    global Rcolumn 
    % = zeros(nw-1,nh);
    Rcolumn = val;
end
function setRraw(a,b,val)
    global Rraw
    Rraw(a,b) = val;
end
function setRcolumn(a,b,val)
    global Rcolumn
    Rcolumn(a,b) = val;
end
function rraw = getRraw
    global Rraw
    rraw = Rraw;
end 
function rraw = getRcolumn
    global Rcolumn
    rcolumn = Rcolumn;
end 
function val = getR(n,raw,column)
    if n == 1
        global Rcolumn
        val = Rcolumn(raw,column);
    end
    if n == 2
        global Rraw
        val = Rraw(raw,column);
    end
end
function RtoM
%北東南西の順にビットが上がる
%各方角で壁があればビット1なければ0
%
end
function initWall(n)
    global W  
    W = zeros(4,n*n);

    for cnt = 0:n-1
        W(1,(n*(n-1)) + cnt) = 1;   %北
        W(2,n + (n*cnt)) = 1;       %東
        W(3,1 + cnt) = 1;   %南
        W(4,1 + (n*cnt)) = 1;           %西
    end
end
function c = W4nnto16(x,y,n) %nは1辺の区画数
    %W(座標)から値を取得し、1×4行列を作成。
    %1×4行列の組み合わせから文字を決定。ビットで。
    global W
    num = y*(n-1) + x;
    bit = W(1,num);
    bit = bit + 2*W(2,num);
    bit = bit + 4*W(3,num);
    bit = bit + 8*W(4,num);
    c = dec2hex(bit);
end
% Rから座標毎の壁情報16進数に変換しMへ

% 16進数から壁配列に直す
% 16進数はそのまま行列にn*n行列に入れる
% 壁配列は描画との橋渡し

%画像から16進数 →keriさんコード
%16進数をn*nマスの行列に
% n*nマスの行列から壁配列
%壁配列から迷路の色初期化

function setWall(x,y)
    %座標と16進数から
    global W
    if x == 1
        W(4,)
end
function m = getWall(x,y)
    global M
    m = M(x,y);
end

function lineCallback(src,~)
    
    persistent i
    if isempty(i)
        i = 0;
    end
    
    if rem(i,2)
        src.FaceColor = 'k';%'#D7E5EE';%'#DEE4E9'; %グレー
        src.LineStyle = '-';
        src.LineWidth = 0.5;
        src.EdgeColor = 'k';
    else
        src.FaceColor = 'w';
        src.LineStyle = '-';
        src.LineWidth = 0.5;
        src.EdgeColor = 'w';
    end

    %クリックされたときに01をどこに書き込むべきかがわかればいい
    % UserDataを変換すれば、16進数に置きなおせる状態
    %disp(src.UserData(1,3));
    
    if src.UserData(1, 1) == 1
        disp(src.UserData);

        setRcolumn(src.UserData(1,2),src.UserData(1,3),rem(i,2));
    end
    if src.UserData(1, 1) == 2
        disp(src.UserData);
        setRraw(src.UserData(1,2),src.UserData(1,3),rem(i,2));
    end
        
    i = i + 1;
    if i==2
        i=0;
    end
end
